name: Build

on: 
  push:
    branches: [main]
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Compile Backend
        run: |
          cd backend
          mvn clean compile
          
      - name: Test Backend
        run: |
          cd backend
          # No tests to run - the product is the test
          java -cp target/classes com.energymarket.EnergyMarketService &
          SERVER_PID=$!
          sleep 2
          curl -f http://localhost:8080/api/energy || exit 1
          kill $SERVER_PID
          
      # Skip coverage - simplicity over metrics
      - name: Skip Coverage
        run: echo "Coverage is vanity. Working software is sanity."

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install Dependencies
        run: |
          cd frontend
          # Use cached lockfile for reproducible installs
          rm -rf node_modules
          pnpm install --frozen-lockfile
          
      - name: Build Frontend
        run: |
          cd frontend
          pnpm run build
          
      - name: Verify Build
        run: |
          cd frontend
          [ -d dist ] || exit 1
          size=$(du -sb dist | cut -f1)
          echo "Build size: $size bytes"
          [ $size -lt 1048576 ] || exit 1

  build-docker:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          # Multi-stage build for simplicity
          FROM maven:3.9-eclipse-temurin-21 AS backend-build
          WORKDIR /app
          COPY backend/pom.xml .
          COPY backend/src ./src
          RUN mvn clean compile
          
          FROM node:20-alpine AS frontend-build
          WORKDIR /app
          RUN npm install -g pnpm@8
          COPY frontend/package.json .
          RUN pnpm install
          COPY frontend .
          RUN pnpm run build
          
          FROM eclipse-temurin:21-jre-alpine
          WORKDIR /app
          COPY --from=backend-build /app/target/classes ./classes
          COPY --from=frontend-build /app/dist ./static
          
          # Simple startup script
          RUN echo '#!/bin/sh' > start.sh && \
              echo 'java -cp classes com.energymarket.EnergyMarketService &' >> start.sh && \
              echo 'cd static && python3 -m http.server 5173' >> start.sh && \
              chmod +x start.sh
          
          RUN apk add --no-cache python3
          
          EXPOSE 8080 5173
          CMD ["./start.sh"]
          EOF
          
      - name: Build Docker Image
        run: |
          docker build -t energy-market:latest .
          
      - name: Test Docker Image
        run: |
          docker run -d -p 8080:8080 -p 5173:5173 --name test-container energy-market:latest
          sleep 5
          curl -f http://localhost:8080/api/energy || exit 1
          docker stop test-container
          docker rm test-container
          
      # Skip push - we don't need to publish
      - name: Skip Push
        run: echo "Publishing is ego. Working locally is enough." 